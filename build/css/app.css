/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{font-family:Raleway,sans-serif;font-size:1.6rem}.contenedor{margin:0 auto;max-width:1200px;width:95%}img{display:block;max-width:100%}ul{list-style:none;margin:0;padding:0}h1,h2,h3{line-height:1.2;margin:0}h1{font-size:4.4rem}h1,h2{font-family:Staatliches,cursive}h2{font-size:4rem}h3{font-size:3rem}[class$=heading]{margin:2rem 0}a{text-decoration:none}a,p{color:#000}p{font-size:1.6rem;line-height:1.8}.header{align-items:center;display:flex;flex-direction:column;padding:2rem 0}@media (min-width:768px){.header{flex-direction:row;justify-content:space-between}}.header .nav{align-items:center;display:flex;flex-direction:column}@media (min-width:768px){.header .nav{flex-direction:row;gap:2rem}}.header .nav__enlace{font-size:1.8rem;margin-bottom:2rem}.header .nav__enlace:last-of-type{margin-bottom:0}@media (min-width:768px){.header .nav__enlace{margin-bottom:0}}.header .nav__enlace--crear{color:#b8336a;font-weight:700}.hero{align-items:center;background-image:url(../img/hero.jpg);background-position:50%;background-size:cover;display:flex;flex-direction:column;height:60rem;justify-content:center;text-align:center}.hero__texto{color:#fff;margin-bottom:2rem;max-width:60rem}.hero__enlace{background-color:#ff8015;border:none;color:#fff;display:inline-block;font-size:2rem;font-weight:400;font-weight:700;margin-top:2rem;padding:1.5rem 4rem;transition-duration:.3s;transition-property:background-color}@media (min-width:768px){.hero__enlace{width:auto}}.hero__enlace:hover{background-color:#e16700}.buscar{background-color:#d9d9d9;padding:5rem 0}.buscar__heading{color:#484349;margin-top:0;text-align:center}.formulario{display:grid;gap:2rem;grid-template-columns:repeat(1,1fr)}@media (min-width:768px){.formulario{grid-template-columns:repeat(4,1fr)}}.formulario__input{border:2px solid #aea8b0;height:5.5rem;padding:1rem}.formulario__boton{background-color:#b8336a;border:none;color:#fff;display:inline-block;font-size:2rem;font-weight:400;font-weight:700;margin-top:0;padding:1.5rem 4rem;transition-duration:.3s;transition-property:background-color}@media (min-width:768px){.formulario__boton{width:auto}}.formulario__boton:hover{background-color:#902853}.eventos__heading{color:#484349;margin-top:5rem;text-align:center}.eventos__grid{display:grid;gap:2rem;grid-template-columns:repeat(1,1fr)}@media (min-width:768px){.eventos__grid{grid-template-columns:repeat(3,1fr)}}.evento__imagen{width:100%}.evento__contenido{border:2px solid #f2f2f2;padding:2rem 0 2rem 2rem}.evento__fecha{font-size:1.4rem;margin:0}.evento__heading{color:#484349}.evento__organizador{align-items:center;display:flex;gap:2rem}.evento__organizador-autor{border-radius:50%;overflow:hidden;width:10rem}.evento__organizador-texto{font-weight:700}.categorias{background-color:#d9d9d9;margin-top:5rem;padding:4rem}.categorias__heading{color:#484349;margin-bottom:5rem;text-align:center}.categorias__grid{display:grid;gap:2rem;grid-template-columns:repeat(1,1fr)}@media (min-width:768px){.categorias__grid{grid-template-columns:repeat(2,1fr)}}@media (min-width:1024px){.categorias__grid{grid-template-columns:repeat(3,1fr)}}.categoria__nombre{font-size:2.5rem;font-weight:700;text-align:center}.grupos{background-image:linear-gradient(180deg,#b8336a 0,#b8336a 50%,#068d9d 0,#068d9d);color:#fff;padding:5rem 0}@media (min-width:768px){.grupos{background-image:linear-gradient(90deg,#b8336a 0,#b8336a 50%,#068d9d 0,#068d9d)}}.grupos__grid{display:grid;gap:5rem;grid-template-columns:repeat(1,1fr)}@media (min-width:768px){.grupos__grid{grid-template-columns:repeat(2,1fr)}}.grupos .grupo__texto{color:#fff;font-size:2.4rem;line-height:2}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
